name: Build & Publish
on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    name: Multi-Platform Build
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    # 修复点 1：添加矩阵策略
    strategy:
      matrix:
        platform: 
          - linux-x64
          - win-x64
          - mac-arm64
        include:
          - platform: linux-x64
            os: ubuntu-latest
            build_args: '-p:DefineConstants=LINUX'
          - platform: win-x64
            os: windows-latest
            build_args: '/p:DefineConstants=WINDOWS'
          - platform: mac-arm64
            os: macos-13
            build_args: '-p:DefineConstants=MAC'

    steps:
      - name: 🛠️ Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 修复点 2：移除重复的 build 步骤
      - name: 🏗️ Build Project
        run: dotnet build ./src/YourApp/YourApp.csproj ${{ matrix.build_args }} --configuration ${{ inputs.build_mode }}

      - name: 📦 Pack Artifacts
        if: ${{ inputs.build_mode == 'release' }}
        run: |
          mkdir -p artifacts/${{ matrix.platform }}
          cp -r bin/* artifacts/${{ matrix.platform }}

      - name: ⬆️ Upload Artifacts (v4)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ github.run_number }}
          path: |
            artifacts/${{ matrix.platform }}/
            !artifacts/${{ matrix.platform }}/**/*.pdb
          compression-level: 9
          retention-days: 7
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: combined-artifacts

      # 修复点 3：添加 SSH 配置步骤
      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan server >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to Server
        run: |
          scp -r combined-artifacts user@server:/deploy/path
