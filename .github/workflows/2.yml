name: .NET Cross-Platform Build

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build configuration'
        required: true
        default: 'debug'
        type: choice
        options: 
          - debug
          - release

jobs:
  build:
    name: Build [${{ inputs.build_mode }}]
    runs-on: ${{ matrix.os }}  # 关键修复点：添加必须的 runs-on 属性
    strategy:
      matrix:
        platform: [linux-x64, win-x64, mac-arm64]
        include:
          - platform: linux-x64
            os: ubuntu-latest
            shell: bash
          - platform: win-x64
            os: windows-latest
            shell: pwsh
          - platform: mac-arm64
            os: macos-13
            shell: bash

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: 🧹 Clean Workspace
        run: |
          rm -rf ./bin ./obj 2>/dev/null || true

      - name: 📂 Debug Directory Structure
        run: |
          echo "Workspace Path: $GITHUB_WORKSPACE"
          ls -lR

      - name: 🔎 Locate Project File
        id: find_project
        run: |
          PROJECT_FILE=$(find . -name '*.csproj' \
            -not -path '*/test/*' \
            -not -path '*/tests/*' \
            -not -path '*/example/*' \
            -print -quit)
          
          if [ -z "$PROJECT_FILE" ]; then
            echo "::error::No .csproj file found!"
            exit 1
          fi
          echo "PROJ_PATH=${PROJECT_FILE}" >> $GITHUB_ENV

      - name: ⚙️ Setup .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x

      - name: 🏗️ Build Project
        run: |
          dotnet build "${{ env.PROJ_PATH }}" \
            --configuration ${{ inputs.build_mode }} \
            --runtime ${{ matrix.platform }} \
            --output ./artifacts/${{ matrix.platform }}
